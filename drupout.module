<?php

/**
 * @file
 * Module that allows creating and editing Speakout campaigns from a webform
 */

/**
 * Simple slugifiyer
 * Replaces all non-slug characters with _
 */
function drupout_slugify($str, $sep='-') {
  return strtolower(preg_replace('/[^a-zA-Z0-9-_]+/', $sep, $str));
}

function drupout_webform_submission_presave($node, &$submission) {
  foreach ($node->webform['components'] as $cid => $component) {
    if ($component['form_key'] == 'speakout_link') {
      $link_cid = $cid;
    }
    if ($component['form_key'] == 'civicrm_1_activity_1_activity_subject') {
      $title = $submission->data[$cid][0];  
    }
  }
  $root_endpoint = variable_get('drupout_endpoint', 'http://localhost:3000');
  $slug = drupout_slugify($title);
  $submission->data[$link_cid][0] = $root_endpoint . '/campaigns/' . $slug;
}

function drupout_language_templates() {
  $templates_str = variable_get('drupout_speakout_templates');
  $langs = explode(',', $templates_str);
  $templates = array();
  foreach ($langs as $lang) {
    list($l, $id) = explode(':', $lang);
    $templates[$l] = $id;
  }
  return $templates;
}

function drupout_params($node, $submission) {
  $params = array();
  foreach ($node->webform['components'] as $cid => $component) {
    $params[$component['form_key']] = $submission->data[$cid][0];  
  }
  return $params;
}

function drupout_template_id($params) {
  $templates = drupout_language_templates();
  $lang = $params['language'];
  return $templates[$lang];
}

function drupout_form2json($params) {
  $title = $params['civicrm_1_activity_1_activity_subject'];
  $date_prefix = date('Ym');
  $language = strtoupper($params['language']);
  $img_file = file_load($params['add_an_image']);
  $jsonData = array(
    'name' => $title,
    'slug' => drupout_slugify($title),
    'internal_name' => $date_prefix . '-' . drupout_slugify($title, '_') . '-' . $language,
    'image_url' => file_create_url($img_file->uri),
    'description' => $params['add_texts_for_social_media_shares'],
    'twitter_share_text' => $params['add_texts_for_ttwitter'],
    'decisions_attr' => array(
      'display_name' => $params['who_are_you_addressing_who_in_the_european_union_can_make_this_happen']
    ),
    'variables' => array(
      'sign_advice' => array(
        'petition' => $params['what_do_you_want_them_to_do'],
	'why_important' => $params['why_is_this_important']
      )
    )
  );

  return $jsonData;
}

function drupout_webform_submission_insert($node, $submission) {
  if ($node->nid == variable_get('drupout_submission_node')) {
    $root_endpoint = variable_get('drupout_endpoint', 'http://localhost:3000');
    $user = variable_get('drupout_speakout_user');
    $password = variable_get('drupout_speakout_password');

    $params = drupout_params($node, $submission);
    $template_id = drupout_template_id($params);
    $jsonData = drupout_form2json($params);
     
    $url = "$root_endpoint/api/campaigns/$template_id/clone";
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_USERPWD, "$user:$password");
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json')); 
    $jsonDataEncoded = json_encode($jsonData);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $jsonDataEncoded);
     
    $result = curl_exec($ch);
    if ($result) {
      $call_info = curl_getinfo($ch);
      if ($call_info['http_code'] != 201) {
      	watchdog('drupout', print_r($call_info, true));
      }
    } else {
      watchdog('drupout', "Unable to send campaign request to Speakout: " . curl_error($ch));
      //TODO
      //Send email to vesna? tech?
    }

    curl_close($ch);
  }
}

/**
 * Creates the item in the admin main page
 */
function drupout_menu() {
  $items = array();

  $items['admin/config/content/drupout'] = array(
    'title' => "Drupout settings",
    'description' => "Settings to create Speakout campaigns from Drupal",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drupout_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Generates the config form
 */
function drupout_settings_form($form, &$form_state) {
  $form['drupout_submission_node'] = array(
    '#type' => 'textfield',
    '#title' => t('Submission node'),
    '#default_value' => variable_get('drupout_submission_node'),
    '#description' => t('Drupal node id with the webform to create/edit campaigns'),
    '#required' => true
  );
  $form['drupout_endpoint'] = array(
    '#type' => 'textfield',
    '#title' => t('Speakout URL'),
    '#default_value' => variable_get('drupout_endpoint', 'http://localhost:3000'),
    '#description' => t('URL to the Speakout application, without trailing slash'),
    '#required' => true
  );
  $form['drupout_speakout_user'] = array(
    '#type' => 'textfield',
    '#title' => t('Speakout user'),
    '#default_value' => variable_get('drupout_speakout_user'),
    '#description' => t('Speakout user'),
    '#required' => true
  );
  $form['drupout_speakout_password'] = array(
    '#type' => 'password',
    '#title' => t('Speakout password'),
    '#description' => t('Speakout password, leave blank if unchanged'),
    '#value_callback' => 'drupout_pwd_value'
  );
  $form['drupout_speakout_templates'] = array(
    '#type' => 'textfield',
    '#title' => t('Speakout templates'),
    '#default_value' => variable_get('drupout_speakout_templates'),
    '#description' => t('Speakout templates'),
    '#required' => true
  );

  return system_settings_form($form);
}

function drupout_pwd_value($element, $input = FALSE, &$form_state) {
  if (!$input) {
    $input = variable_get('drupout_speakout_password');
  }
  return $input;
}

function drupout_youmove_languages() {
  $languages = array(
    'da' => t('Danish'),
    'de' => t('German'),
    'el' => t('Greek'),
    'en' => t('English'),
    'es' => t('Spanish'),
    'fr' => t('French'),
    'hu' => t('Hungarian'),
    'it' => t('Italian'),
    'nl' => t('Dutch'),
    'pl' => t('Polish'),
    'pt' => t('Portuguese'),
  );
  $available = drupout_language_templates();
  return array_intersect_key($languages, $available);
}

function drupout_webform_select_options_info() {
  $items = array();

  $items['youmove_langs'] = array(
    'title' => t('Youmove languages'), 
    'options callback' => 'drupout_youmove_languages', 
  );

  return $items;
}

